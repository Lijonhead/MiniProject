// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniProject.Data;

#nullable disable

namespace MiniProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240121181602_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MiniProject.Models.Intrest", b =>
                {
                    b.Property<int>("IntrestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntrestId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntrestId");

                    b.ToTable("Intrests");
                });

            modelBuilder.Entity("MiniProject.Models.Link", b =>
                {
                    b.Property<int>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkId"), 1L, 1);

                    b.Property<int>("PersonIntrestId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LinkId");

                    b.HasIndex("PersonIntrestId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("MiniProject.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("MiniProject.Models.PersonIntrest", b =>
                {
                    b.Property<int>("PersonIntrestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonIntrestId"), 1L, 1);

                    b.Property<int>("IntrestId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("PersonIntrestId");

                    b.HasIndex("IntrestId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonIntrests");
                });

            modelBuilder.Entity("MiniProject.Models.Link", b =>
                {
                    b.HasOne("MiniProject.Models.PersonIntrest", "PersonIntrest")
                        .WithMany("links")
                        .HasForeignKey("PersonIntrestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonIntrest");
                });

            modelBuilder.Entity("MiniProject.Models.PersonIntrest", b =>
                {
                    b.HasOne("MiniProject.Models.Intrest", "Intrest")
                        .WithMany("personIntrests")
                        .HasForeignKey("IntrestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniProject.Models.Person", "Person")
                        .WithMany("personIntrests")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intrest");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MiniProject.Models.Intrest", b =>
                {
                    b.Navigation("personIntrests");
                });

            modelBuilder.Entity("MiniProject.Models.Person", b =>
                {
                    b.Navigation("personIntrests");
                });

            modelBuilder.Entity("MiniProject.Models.PersonIntrest", b =>
                {
                    b.Navigation("links");
                });
#pragma warning restore 612, 618
        }
    }
}
